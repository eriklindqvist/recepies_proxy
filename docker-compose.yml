version: '2'

services:
  nginx:
    image: jwilder/nginx-proxy:alpine
    ports:
    #  - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./vhost.d:/etc/nginx/vhost.d:ro
      - ./certs:/etc/nginx/certs
      - ./my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro
    depends_on:
      - "ui"
      - "api"
      - "auth"
  ui:
    image: recepies_ui:latest
    ports:
      - "3003:3003"
    environment:
      - VIRTUAL_HOST=recepies.local
      - VIRTUAL_PORT=3003
    volumes:
      - ./files:/files/images:ro
    depends_on:
      - "api"
      - "auth"
  api:
    image: recepies_api:latest
    ports:
      - "3000:3000"
    environment:
      - MONGODB_HOST=mongo
      - DATABASE=recepies
      - FILEBASE=/files
      - KEYFILE=/public.rsa
      - PROTECTED_ENDPOINTS="recipe:create,recipe:update,recipe:delete,recipe:upload"
    volumes:
      - ./files:/files
      - ./certs/public.rsa:/public.rsa:ro
    depends_on:
      - "mongo"
      - "logstash"
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://localhost:5000"
        tag: "recepies-api"
  auth:
    image: recepies_auth:latest
    ports:
      - "3002:3002"
    volumes:
      - ./certs/private.rsa:/private.rsa:ro
    environment:
      - MONGODB_HOST=172.17.0.1
      - DATABASE=recepies
      - KEYFILE=/private.rsa
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://localhost:5000"
        tag: "auth-api"
    depends_on:
      - "mongo"
      - "logstash"
  mongo:
    image: mvertes/alpine-mongo
    ports:
      - "27017:27017"
    volumes:
      - ./db:/data/db
    command: mongod --bind_ip_all
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.1.2
    ports:
      - "5000:5000"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    depends_on:
      - "elasticsearch"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.2
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "discovery.type=single-node"
    volumes:
      #- ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/data:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.1.2
    ports:
      - "5601:5601"
    #volumes:
    #  - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - VIRTUAL_HOST=kibana.recepies.local
      - VIRTUAL_PORT=5601
